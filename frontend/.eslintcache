[{"C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\index.js":"1","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\App.js":"2","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\Profile\\Profile.js":"4","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\Timeline\\Timeline.js":"5","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\button\\Button.js":"6","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\header\\Header.js":"7","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\footer\\Footer.js":"8","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\pages\\resume\\Resume.js":"9","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\pages\\portfolio\\Portfolio.js":"10","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\utils\\resumeData.js":"11","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\pages\\about\\About.js":"12","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\pages\\contact\\Contact.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1365,"mtime":1611007869521,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":2833,"mtime":1611070185847,"results":"18","hashOfConfig":"15"},{"size":1517,"mtime":1610575625202,"results":"19","hashOfConfig":"15"},{"size":388,"mtime":1610633013343,"results":"20","hashOfConfig":"15"},{"size":3766,"mtime":1611073768172,"results":"21","hashOfConfig":"15"},{"size":1491,"mtime":1611074108203,"results":"22","hashOfConfig":"15"},{"size":6751,"mtime":1611079022823,"results":"23","hashOfConfig":"15"},{"size":4276,"mtime":1611085822531,"results":"24","hashOfConfig":"15"},{"size":6964,"mtime":1611095550970,"results":"25","hashOfConfig":"15"},{"size":4853,"mtime":1611010459801,"results":"26","hashOfConfig":"15"},{"size":4359,"mtime":1611063086317,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"7z3ftc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\index.js",[],["62","63"],"C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\App.js",[],"C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\Profile\\Profile.js",["64"],"import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../Timeline/Timeline';\r\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport resumeData from '../../utils/resumeData';\r\nimport CustomButton from '../button/Button';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport EmailSharpIcon from '@material-ui/icons/EmailSharp';\r\nimport WorkSharpIcon from '@material-ui/icons/WorkSharp';\r\n\r\nimport khImg from './kh.jpg';\r\nimport './Profile.css';\r\n\r\nconst CustomTimelineItem = ({ title, text, link }) => (\r\n    <TimelineItem>\r\n        <CustomTimelineSeparator />\r\n        <TimelineContent className='timeline-content'>\r\n            {link ? (\r\n                <Typography className='timelineItem_text'>\r\n                    <span>{title}</span>{\" \"}\r\n                    <a href={link} target=\"-blank\" >\r\n                        {text}\r\n                    </a>\r\n                </Typography>\r\n            ) : (\r\n                    <Typography className='timelineItem-text'>\r\n                        <span>{title}</span>{text}\r\n                    </Typography>\r\n                )}\r\n        </TimelineContent>\r\n    </TimelineItem>\r\n)\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div className='profile container-shadow'>\r\n            <div className='profile-name'>\r\n                <Typography className='name'>{resumeData.name}</Typography>\r\n                {/* <Typography className='title'>{resumeData.title}</Typography> */}\r\n            </div>\r\n\r\n            <figure className='profile-image'>\r\n                <img src={khImg} alt=\"\" />\r\n            </figure>\r\n\r\n            <div className='profile-information'>\r\n                <CustomTimeline icon={<PersonOutlineOutlinedIcon style={{ color: \"black\" }} />}>\r\n                    {/* <CustomTimelineItem title=\"Name\" text={resumeData.name} /> */}\r\n                    <CustomTimelineItem title={<WorkSharpIcon />} text={resumeData.title} />\r\n                    <CustomTimelineItem title={<EmailSharpIcon />} text={resumeData.email} />\r\n                    <CustomTimelineItem title={<PhoneIcon />} text={resumeData.phone} />\r\n                    {/* <CustomTimelineItem title=\"Address\" text={resumeData.address} /> */}\r\n                </CustomTimeline>\r\n                <div className='button-containor' style={{ display: 'flex' }}>\r\n                    <CustomButton text={'Download CV'} icon={<GetAppIcon />} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\Timeline\\Timeline.js",["65"],"import React from 'react';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\n\r\nimport './Timeline.css';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CustomTimeline = ({ title, icon, children }) => {\r\n    return (\r\n        <Timeline className={'timeline'}>\r\n            {/* item Header */}\r\n            <TimelineItem className={'timeline_firstItem'}>\r\n                <TimelineSeparator>\r\n                    <TimelineDot className={'timeline_dot_header'} >{icon}</TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                    <Typography variant='h6' className={'timeline_header'}>\r\n                        {title}\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            {children}\r\n        </Timeline>\r\n    );\r\n};\r\n\r\nexport const CustomTimelineSeparator = () => (\r\n    <TimelineSeparator className={'separator_padding'}>\r\n        <TimelineDot variant={'outlined'} className={'timeline_dot'} />\r\n        <TimelineConnector />\r\n    </TimelineSeparator>\r\n);\r\n\r\nexport default CustomTimeline;","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\button\\Button.js",[],"C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\header\\Header.js",["66","67","68","69","70","71","72","73","74","75","76","77","78"],"import React from 'react'\r\nimport { Button, Form, FormControl, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nimport { HomeOutlined, SchoolRounded, WorldRounded, Facebook, Twitter, LinkedIn, GitHub, Telegram }\r\n    from '@material-ui/icons';\r\nimport './Header.css'\r\n// import emailjs from 'emailjs-com'\r\n// import apiKeys from '../apikeys'\r\nimport CustomButton from '../button/Button';\r\nimport resumeData from '../../utils/resumeData';\r\n\r\nconst Header = (props) => {\r\n    const pathName = props?.location?.pathname;\r\n\r\n    // const onSubmit = (e) => {\r\n    //     e.preventDefault()// Prevents default refresh by the browser\r\n    //     emailjs.sendForm('gmail', apiKeys.TEMPLATE_ID, e.target, apiKeys.USER_ID)\r\n    //         .then(result => {\r\n    //             alert('Message Sent, I\\'ll get back to you shortly', result.text);\r\n    //         },\r\n    //             error => {\r\n    //                 alert('An error occured, Plese try again', error.text)\r\n    //             })\r\n    // }\r\n\r\n    return (\r\n        <Navbar expand=\"lg\" sticky='top' className='header'>\r\n            {/* Home link */}\r\n            <Nav.Link as={NavLink} to='/' className=\"header-navlink\">\r\n                <Navbar.Brand className='header-home'>\r\n                    <HomeOutlined />\r\n                </Navbar.Brand>\r\n            </Nav.Link>\r\n\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse>\r\n                <Nav className=\"header-left\">\r\n                    {/* About Me link */}\r\n                    <Nav.Link as={NavLink} to='/' className={pathName === '/' ? 'header-link-active' : 'header-link'}>\r\n                        About Me\r\n                    </Nav.Link>\r\n                    {/* Resume link */}\r\n                    <Nav.Link as={NavLink} to='/resume' className={pathName === '/resume' ? 'header-link-active' : 'header-link'}>\r\n                        Resume\r\n                    </Nav.Link>\r\n\r\n                    {/* portfolio Link */}\r\n                    <Nav.Link as={NavLink} to='/portfolio' className={pathName === '/portfolio' ? 'header-link-active' : 'header-link'}>\r\n                        Portfolio\r\n                    </Nav.Link>\r\n                    {/* Contact Link */}\r\n                    <Nav.Link as={NavLink} to='/contact' className={pathName === '/contact' ? 'header-link-active' : 'header-link'}>\r\n                        Contact Me\r\n                    </Nav.Link>\r\n                </Nav>\r\n                <div className=\"header-right\">\r\n                    {/* social icons */}\r\n                    {/* {Object.keys(resumeData.socials).map((key) => (\r\n                        <a href={resumeData.socials[key].link} target=\"_blank\">\r\n                            {resumeData.socials[key].icon}\r\n                        </a>\r\n                    ))} */}\r\n                    <CustomButton text={'Hire Me'} icon={<Telegram />} />\r\n                    {/* <form className='form' onSubmit={onSubmit}>\r\n                        <p>Your Name:</p>\r\n                        <input name='name' type='text' placeholder='name…' className='form__input' />\r\n                        <p>Subject:</p>\r\n                        <input name='subject' type='text' placeholder='Subject…' className='form__input' />\r\n                        <p>Your Message:</p>\r\n                        <textarea name='message' type='text' placeholder='Your Message…' className='form__input-message' ></textarea>\r\n                        <button className='form__input — button'>Send Message</button>\r\n                    </form> */}\r\n                </div>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\component\\footer\\Footer.js",[],"C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\pages\\resume\\Resume.js",["79","80"],"import React from 'react';\r\nimport { Grid, Paper, TextField, Typography } from '@material-ui/core';\r\nimport resumeData from '../../utils/resumeData';\r\nimport \"./Resume.css\";\r\n\r\nimport WorkOutlineIcon from '@material-ui/icons/WorkOutline';\r\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\r\nimport CustomButton from '../../component/button/Button';\r\n\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../component/Timeline/Timeline';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <>\r\n            {/* Education & Experiences */}\r\n            <Grid container className=\"section pb-45 pt-45\">\r\n                <Grid item className=\"section-title mb-30\">\r\n                    <span></span>\r\n                    <h6 className=\"section-title-text\">Resume</h6>\r\n                </Grid>\r\n                <Grid item xs={12}><br></br>\r\n                    <Grid container className='resume-timeline'>\r\n\r\n                        {/* Experiences */}\r\n                        <Grid item sm={12} md={6}>\r\n                            <CustomTimeline title='Work Experience' icon={<WorkOutlineIcon style={{ color: \"black\" }} />}>\r\n                                {resumeData.experiences.map((experience) => (\r\n                                    <TimelineItem>\r\n                                        <CustomTimelineSeparator />\r\n                                        <TimelineContent className='timeline-content'>\r\n                                            <Typography className=\"timeline-title\">\r\n                                                {experience.title}\r\n                                            </Typography>\r\n                                            <Typography variant='caption' className=\"timeline-date\">\r\n                                                {experience.date}\r\n                                            </Typography>\r\n                                            <Typography variant='body2' className=\"timeline-description\">\r\n                                                {experience.description}\r\n                                            </Typography>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>\r\n                                ))}\r\n                            </CustomTimeline>\r\n                        </Grid>\r\n\r\n                        {/* Education  */}\r\n                        <Grid item sm={12} md={6}>\r\n                            <CustomTimeline title='Education' icon={<SchoolOutlinedIcon style={{ color: \"black\" }} />}>\r\n                                {resumeData.education.map((education) => (\r\n                                    <TimelineItem>\r\n                                        <CustomTimelineSeparator />\r\n                                        <TimelineContent className='timeline-content'>\r\n                                            <Typography className=\"timeline-title\">\r\n                                                {education.title}\r\n                                            </Typography>\r\n                                            <Typography variant='caption' className=\"timeline-date\">\r\n                                                {education.date}\r\n                                            </Typography>\r\n                                            <Typography variant='body2' className=\"timeline-description\">\r\n                                                {education.description}\r\n                                            </Typography>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>\r\n                                ))}\r\n                            </CustomTimeline>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {/* Services */}\r\n            {/* <Grid container className=\"section Pb-45\">\r\n                <Grid item className=\"section-title mb-30\">\r\n                    <span></span>\r\n                    <h6 className=\"section-title-text\">My Skills</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={3} justify=\"space-around\">\r\n                        {resumeData.services.map((service) => (\r\n                            <Grid item xs={12} sm={6} md={3}>\r\n                                <div className=\"service\">\r\n                                    <icon className=\"service-icon\">{service.icon}</icon>\r\n                                    <Typography className=\"service-title\" variant=\"h6\">\r\n                                        {service.title}\r\n                                    </Typography>\r\n                                    <Typography className=\"service-description\" variant=\"body2\">\r\n                                        {service.description}\r\n                                    </Typography>\r\n                                </div>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> */}\r\n\r\n            {/* Skills */}\r\n            <Grid container className=\"section graybg pb-45 p-50\">\r\n                <Grid item className=\"section-title mb-30\">\r\n                    <span></span>\r\n                    <h6 className=\"section-title-text\">My Skills</h6>\r\n                </Grid><br></br>\r\n                <Grid item xs={12}><br></br>\r\n                    <Grid container spacing={3} justify=\"space-between\">\r\n                        {resumeData.skills.map((skill) => (\r\n                            <Grid item xs={12} sm={6} md={3}>\r\n                                <Paper elevation={0} className=\"skill\">\r\n                                    <Typography className=\"skill-title\" variant=\"h6\">\r\n                                        {skill.title}\r\n                                    </Typography>\r\n                                    {skill.description.map((element) => (\r\n                                        <Typography className=\"skill-description\" variant=\"body2\">\r\n                                            <TimelineDot variant={'outlined'} className=\"timeline-dot\" />\r\n                                            {element}\r\n                                        </Typography>\r\n                                    ))}\r\n                                </Paper>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume;\r\n","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\pages\\portfolio\\Portfolio.js",["81"],"import React, { useState } from 'react';\r\nimport { Grid, Tabs, Tab, Grow, Card, CardActionArea, CardMedia, CardContent, Typography, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\n\r\nimport './Portfolio.css';\r\nimport resumeData from '../../utils/resumeData';\r\n\r\n\r\nconst Portfolio = () => {\r\n    const [tabValue, setTabValue] = useState(\"All\");\r\n    const [projectDialog, setProjectDialog] = useState(false);\r\n\r\n    return (\r\n        <Grid container spacing={1} className='section pb-45 pt-45'>\r\n            {/* Title  */}\r\n            <Grid item className='section-title mb-20'>\r\n                <span></span>\r\n                <h6 className=\"section-title-text\">Portfolio</h6>\r\n            </Grid>\r\n\r\n            {/* Tabs */}\r\n            <Grid item xs={12}>\r\n                <Tabs value={tabValue}\r\n                    indicatorColor='white'\r\n                    className='customTabs'\r\n                    onChange={(event, newValue) => setTabValue(newValue)}>\r\n                    <Tab label=\"All\" value=\"All\"\r\n                        className={tabValue === \"All\" ? \"customTabs-item active\" : \"customTabs-item\"} />\r\n\r\n                    {[...new Set(resumeData.projects.map((item) => item.tag))].map(\r\n                        (tag) => (\r\n                            <Tab\r\n                                label={tag}\r\n                                value={tag}\r\n                                className={tabValue === tag ? \"customTabs-item active\" : \"customTabs-item\"} />\r\n                        )\r\n                    )}\r\n                </Tabs>\r\n            </Grid>\r\n\r\n            {/* Projects  */}\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={2}>\r\n                    {resumeData.projects.map((project) => (\r\n                        <>\r\n                            {tabValue === project.tag || tabValue === 'All' ? (\r\n                                <Grid item xs={12} sm={6} md={4}>\r\n                                    <Grow in timeout={1000}>\r\n                                        <Card className='custumCard'\r\n                                            onClick={() => setProjectDialog(project)}>\r\n                                            <CardActionArea>\r\n                                                <CardMedia\r\n                                                    className='custumCard-image'\r\n                                                    image={project.image}\r\n                                                    title={project.title} />\r\n                                                <CardContent>\r\n                                                    <Typography className='custumCard-title' variant='body2'>{project.title}</Typography>\r\n                                                    <Typography className='custumCard-caption' variant='body2'>{project.caption}</Typography>\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Grow>\r\n                                </Grid>\r\n                            ) : null}\r\n                        </>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Dialog open={projectDialog} onClose={() => setProjectDialog(false)}\r\n                className=\"projectDialog\"\r\n                fullWidth>\r\n                <DialogTitle onClose={() => setProjectDialog(false)}>\r\n                    {projectDialog.title}\r\n                </DialogTitle>\r\n                <img src={projectDialog.image} alt=\"\" className=\"projectDialog-image\" />\r\n                <DialogContent>\r\n                    <Typography className=\"projectDialog-description\">{projectDialog.description}</Typography>\r\n                </DialogContent>\r\n                <DialogActions className=\"projectDialog-actions\">\r\n                    {projectDialog?.links?.map((link) => (\r\n                        <a href={link.link} target=\"_blank\" className=\"projectDialog-icon\">\r\n                            {link.icon}\r\n                        </a>\r\n                    ))}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Portfolio\r\n","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\utils\\resumeData.js",["82","83"],"C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\pages\\about\\About.js",["84","85","86","87","88","89","90","91","92","93"],"import React from 'react';\r\nimport { Grid, Paper, TextField, Typography } from '@material-ui/core';\r\nimport resumeData from '../../utils/resumeData';\r\nimport \"./About.css\";\r\n\r\nimport WorkOutlineIcon from '@material-ui/icons/WorkOutline';\r\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\r\nimport CustomButton from '../../component/button/Button';\r\n\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../component/Timeline/Timeline';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\nconst About = () => {\r\n    return (\r\n        <>\r\n            {/* About me */}\r\n            <Grid container className=\"section pb-45 pt-45\">\r\n                <Grid item className=\"section-title mb-30\">\r\n                    <span></span>\r\n                    <h6 className=\"section-title-text\">About Me</h6>\r\n                </Grid>\r\n                <Grid item xs={12}><br></br>\r\n                    <Typography variant='body2' className=\"aboutme-text\">{resumeData.about}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n\r\n\r\n\r\n            {/* Contact */}\r\n            {/* <Grid container spacing={6} className=\"section pt-45 pb-45\"> */}\r\n            {/* Contact form  */}\r\n            {/* <Grid item xs={12} lg={7}>\r\n                    <Grid container>\r\n                        <Grid item className=\"section-title mb-30\">\r\n                            <span></span>\r\n                            <h6 className=\"section-title-text\">Contact Form</h6>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField fullWidth name='name' label='Name' />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField fullWidth name='email' label='Email' />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField fullWidth name='message' label='Message' multiline rows={4} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <CustomButton text=\"Submit\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> */}\r\n\r\n            {/* Contact Information */}\r\n            {/* <Grid item xs={12} lg={5}>\r\n                    <Grid container>\r\n                        <Grid item className=\"section-title mb-30\">\r\n                            <span></span>\r\n                            <h6 className=\"section-title-text\">Contact Information</h6>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className='contactInfo-item'>\r\n                                        <span>Adress: </span>{resumeData.address}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className='contactInfo-item'>\r\n                                        <span>Phone: </span>{resumeData.phone}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className='contactInfo-item'>\r\n                                        <span>Email: </span>{resumeData.email}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid container className='contactInfo-socialsContainer'>\r\n                                {Object.keys(resumeData.socials).map((key) => (\r\n                                    <Grid item className='contactInfo-social'>\r\n                                        <a href={resumeData.socials[key].link}>\r\n                                            {resumeData.socials[key].icon}\r\n                                        </a>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> */}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default About;\r\n","C:\\Users\\UOE\\Desktop\\kholoud-portfolio\\frontend\\src\\pages\\contact\\Contact.js",["94","95","96","97","98","99","100","101","102","103"],"import React from 'react';\r\nimport { Grid, Paper, TextField, Typography } from '@material-ui/core';\r\nimport resumeData from '../../utils/resumeData';\r\nimport \"./Contact.css\";\r\n\r\nimport WorkOutlineIcon from '@material-ui/icons/WorkOutline';\r\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\r\nimport CustomButton from '../../component/button/Button';\r\n\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../component/Timeline/Timeline';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <>\r\n            {/* Contact */}\r\n            <Grid container spacing={6} className=\"section pt-45 pb-45\">\r\n                {/* Contact form  */}\r\n                {/* <Grid item xs={12} lg={7}>\r\n                    <Grid container>\r\n                        <Grid item className=\"section-title mb-30\">\r\n                            <span></span>\r\n                            <h6 className=\"section-title-text\">Contact Form</h6>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField fullWidth name='name' label='Name' />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField fullWidth name='email' label='Email' />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField fullWidth name='message' label='Message' multiline rows={4} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <CustomButton text=\"Submit\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> */}\r\n\r\n                {/* Contact Information */}\r\n                <Grid item xs={12} lg={5}>\r\n                    <Grid container>\r\n                        <Grid item className=\"section-title mb-30\">\r\n                            <span></span>\r\n                            <h6 className=\"section-title-text\">Contact Information</h6>\r\n                        </Grid>\r\n                        <Grid item xs={12}><br></br>\r\n                            <Grid container>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className='contactInfo-item'>\r\n                                        <span>Adress: </span>{resumeData.address}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className='contactInfo-item'>\r\n                                        <span>Phone: </span>{resumeData.phone}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography className='contactInfo-item'>\r\n                                        <span>Email: </span>{resumeData.email}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid container className='contactInfo-socialsContainer'>\r\n                                {Object.keys(resumeData.contacts).map((key) => (\r\n                                    <Grid item className='contactInfo-contact'>\r\n                                        <a href={resumeData.contacts[key].link}>\r\n                                            {resumeData.contacts[key].icon}\r\n                                        </a>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"108","severity":1,"message":"112","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"108","severity":1,"message":"113","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"114","line":2,"column":18,"nodeType":"110","messageId":"111","endLine":2,"endColumn":22},{"ruleId":"108","severity":1,"message":"115","line":2,"column":24,"nodeType":"110","messageId":"111","endLine":2,"endColumn":35},{"ruleId":"108","severity":1,"message":"116","line":2,"column":50,"nodeType":"110","messageId":"111","endLine":2,"endColumn":61},{"ruleId":"108","severity":1,"message":"117","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":14},{"ruleId":"108","severity":1,"message":"118","line":4,"column":25,"nodeType":"110","messageId":"111","endLine":4,"endColumn":35},{"ruleId":"108","severity":1,"message":"119","line":5,"column":24,"nodeType":"110","messageId":"111","endLine":5,"endColumn":37},{"ruleId":"108","severity":1,"message":"120","line":5,"column":39,"nodeType":"110","messageId":"111","endLine":5,"endColumn":51},{"ruleId":"108","severity":1,"message":"121","line":5,"column":53,"nodeType":"110","messageId":"111","endLine":5,"endColumn":61},{"ruleId":"108","severity":1,"message":"122","line":5,"column":63,"nodeType":"110","messageId":"111","endLine":5,"endColumn":70},{"ruleId":"108","severity":1,"message":"123","line":5,"column":72,"nodeType":"110","messageId":"111","endLine":5,"endColumn":80},{"ruleId":"108","severity":1,"message":"124","line":5,"column":82,"nodeType":"110","messageId":"111","endLine":5,"endColumn":88},{"ruleId":"108","severity":1,"message":"125","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":18},{"ruleId":"108","severity":1,"message":"126","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":32},{"ruleId":"108","severity":1,"message":"127","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":81,"column":45,"nodeType":"130","endLine":81,"endColumn":60},{"ruleId":"108","severity":1,"message":"131","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":12,"column":1,"nodeType":"134","endLine":175,"endColumn":3},{"ruleId":"108","severity":1,"message":"135","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"126","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":32},{"ruleId":"108","severity":1,"message":"136","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":23},{"ruleId":"108","severity":1,"message":"137","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":26},{"ruleId":"108","severity":1,"message":"127","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":20},{"ruleId":"108","severity":1,"message":"138","line":10,"column":8,"nodeType":"110","messageId":"111","endLine":10,"endColumn":20},{"ruleId":"108","severity":1,"message":"139","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":23},{"ruleId":"108","severity":1,"message":"140","line":12,"column":8,"nodeType":"110","messageId":"111","endLine":12,"endColumn":22},{"ruleId":"108","severity":1,"message":"141","line":12,"column":26,"nodeType":"110","messageId":"111","endLine":12,"endColumn":49},{"ruleId":"108","severity":1,"message":"142","line":13,"column":8,"nodeType":"110","messageId":"111","endLine":13,"endColumn":19},{"ruleId":"108","severity":1,"message":"135","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"126","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":32},{"ruleId":"108","severity":1,"message":"136","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":23},{"ruleId":"108","severity":1,"message":"137","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":26},{"ruleId":"108","severity":1,"message":"127","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":20},{"ruleId":"108","severity":1,"message":"138","line":10,"column":8,"nodeType":"110","messageId":"111","endLine":10,"endColumn":20},{"ruleId":"108","severity":1,"message":"139","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":23},{"ruleId":"108","severity":1,"message":"140","line":12,"column":8,"nodeType":"110","messageId":"111","endLine":12,"endColumn":22},{"ruleId":"108","severity":1,"message":"141","line":12,"column":26,"nodeType":"110","messageId":"111","endLine":12,"endColumn":49},{"ruleId":"108","severity":1,"message":"142","line":13,"column":8,"nodeType":"110","messageId":"111","endLine":13,"endColumn":19},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'Timeline' is defined but never used.","Identifier","unusedVar","'WorkIcon' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'SchoolRounded' is defined but never used.","'WorldRounded' is defined but never used.","'Facebook' is defined but never used.","'Twitter' is defined but never used.","'LinkedIn' is defined but never used.","'GitHub' is defined but never used.","'resumeData' is defined but never used.","'TextField' is defined but never used.","'CustomButton' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Language' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Paper' is defined but never used.","'WorkOutlineIcon' is defined but never used.","'SchoolOutlinedIcon' is defined but never used.","'TimelineItem' is defined but never used.","'TimelineContent' is defined but never used.","'CustomTimeline' is defined but never used.","'CustomTimelineSeparator' is defined but never used.","'TimelineDot' is defined but never used.","no-global-assign","no-unsafe-negation"]